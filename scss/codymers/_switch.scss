// CORE
// ===============================================
@use "../abstracts/index" as *;
// ===============================================

// CDMR: switch
// ===============================================
@mixin cdmr-switch($theme: null) {
  .cdmr-switch {
    $self: &;
    @include position(relative);
    @include size(var(--switch-w-size), var(--switch-h-size));
    display: inline-block;
    vertical-align: middle;

    // &:before
    &:before {
      content: "";
      @include position(absolute, 0, 0, 0, 0);
      @include size(100%);
      @include border(all, var(--theme-w-border), solid, var(--color-primary));
      @include border-radius(var(--theme-radius));
      z-index: 2;
    }

    // &__label
    &__label {
      @include hide-visually;
    }

    // &__slider
    &__slider {
      @include position(absolute, 0, 0, 0, 0);
      transition: background-color 0.2s ease-in;

      // &:before
      &:before {
        content: "";
        @include position(absolute, 0, null, 0, 0);
        @include margin(auto null auto null);
        @include size(var(--switch-slider-w-size), var(--switch-slider-h-size));
        @include border-radius(var(--switch-slider-radius));
        z-index: 1;
        transition: transform 0.3s cubic-bezier(0.16, 1, 0.3, 1);
        background-color: var(--switch-slider-background-color); 
      }
    }

    // &__input
    &__input {
      @include position(absolute, 0, null, null, 0);
      @include size(100%);
      z-index: 3;

      // &:checked
      &:checked {
        // + #{ $self }
        + #{ $self } {
          // &__slider
          &__slider {
            // &:before
            &:before {
              transform: translateX(100%);
            }
          }
        }
      }

      // &:disabled
      &:disabled {
        // &:hover
        &:hover {
          cursor: not-allowed;
        }
      }

      // &:focus-visible
      &:focus-visible {
        outline: 0.2rem solid var(--color-state-focus);
      }
    }

    // &__status
    &__status {
      @include position(absolute, 0, null, 0, null);
      @include margin(auto null auto null);
      @include size(var(--switch-status-w-size), var(--switch-status-h-size));

      // &:before 
      &:before {
        content: "";
        @include position(absolute, 0, 0, 0, 0);
        @include margin(auto);
        @include size(var(--switch-status-icon-size));
        filter: var(--switch-status-icon-filter);
      }

      // &--ok
      &--ok {
        @include position(null, null, null, null, 0);
        @include border-radius(var(--theme-radius),0,0,var(--theme-radius));
        background-color: var(--color-state-ok);

        // &:before 
        &:before {
          @include background-setup(
            // img path
            var(--switch-status-icon-ok-pic),
            // position and size
            "0 0 / contain",
            // repeat
            no-repeat,
            // attachment
            null,
            // origin
            null,
            // clip
            null,
            // color
            null
          );
        }
      }

      // &--ko
      &--ko {
        @include position(null, null, 0, null, null);
        @include border-radius(0,var(--theme-radius),var(--theme-radius),0);
        background-color: var(--color-state-ko);

        // &:before 
        &:before {
          @include background-setup(
            // img path
            var(--switch-status-icon-ko-pic),
            // position and size
            "0 0 / contain",
            // repeat
            no-repeat,
            // attachment
            null,
            // origin
            null,
            // clip
            null,
            // color
            null
          );
        }
      }
    }

    // &:has()
    &:has(input:disabled) {
      // &:before
      &:before {
        border-color: var(--color-state-disabled);
      }

      // #{ $self }
      #{ $self } {
        // &__status
        &__status {
          opacity: var(--switch-status-disabled);
        }
      }
    }

    // &:not(:has(input:disabled))
    &:not(:has(input:disabled)) {
      // &:hover
      &:hover {
        // &:before
        &:before {
          border-color: var(--color-primary);
          box-shadow: var(--theme-focus);
        }
      }
    }

    // &--has
    &--has {
    }

    // &--is
    &--is {
    }
  }
}
